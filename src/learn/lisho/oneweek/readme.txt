第一周课程：java语言
    总结：类、方法、属性、对象、继承、覆盖、实例变量、类变量、实例方法、类方法。
    类：创建对象的模板
    方法：定义对象的行为
    属性：定义对象的属性
    继承：让类拥有其他类的属性和方法
    覆盖：需要使用与父类相似但仍需要定制化的方法时，子类创建于父类方法名，返回值，参数相同的方法。
    实例变量：动态的，对象赋予它什么就是什么。
    静态变量：
    1.5
    继承、接口和包，这些都是用于组织类和类行为的机制
    1.5.1
    通过继承其他类可以拥有其他类的所有属性和行为
    被继承的叫做父类或超类，继承的类叫子类
    java只能继承一个类，一层一层继承从而拥有父类的属性和行为，或者父类的父类的属性和行为，最顶端为Object超类
    覆盖：子类定义名称，返回值和参数相同的方法。
第二章
    总结：
    创建变量：如：int weiht = 225; String aa = "str";（变量命名，必须以字母，下划线，美元符号开头）
    java基本类型：整型 byte、short、int、long  浮点型：float、double 布尔类型：boolean
    常量：final float PI = 3.142343; (常量名称要大写）
    注释
    字面量：数字、字符、字符串都是字面量：
        数字字面量：long l = 5L; float f = 3.14F ; double x = 12e22; int i = 3_500_888
        布尔字面量：true、false
        字符字面量：单引号括起来的单个字符，如 'a' 、'#'
        字符串字面量：用双引号括起来的一系列字符
    表达式和运算符：
        -算术运算符：+ 、- 、* 、/ 、%
        -递增和递减运算符：int x = 7; x = x++ ; 即x = x+1  等于8
            复杂情况：int x,y,z;
            x = 42;
            y = x++;
            z = ++x;
            后缀运算符：y = x++ 等于 42+1 即将x的值赋予y再+1，先计算左边。
            前缀运算符：z = ++x 等于 z=44 即z=43+1 等于 44；先计算右边
        -比较运算符：
            ==、!=、<、>、<=、>=
        -逻辑运算符
            and : &或&& 区别在于第一个两边的表达式都会进行计算得出结论，第二个则只会计算第一表达式，如果不满足则停止计算
            or  : ||
            not : !  求反
            xor : ^  仅当被合并的的两个布尔表达式的值相反时，整个表达式的结果才为true
第三章：对象
    创建新对象
        使用new创建
        创建过程中发生的几件事：创建该类的实例并在栈中为他分配内存、调用该类的一个特殊的方法-构造函数。
            -内存管理：自动的，不需要手动释放
        使用类变量和实例变量
            -获取值：使用句点表示法
            -设置值：使用运算符=
            -类变量：每个实例都将有实例变量的一个副本，它们可以修改实例变量的值，而不会影响其他实例；而类变量只有一个副本，修改它的值将影响所有实例。
        调用方法
            -句点表示法
        设置字符串格式
        嵌套方法调用
            -如：常用的System.out.println(),System类位于java.lang包中，System.out是一个类变量，他存储了PrintStream类的一个实例，该PrintStream对象表示的是系统的标准输出
            PrintStream对象有一个方法println()，他将一个字符串发送给输出流。

    测试和修改对象的类变量和实例变量
    调用对象的方法
    将对象从一个类转换为另一个类









